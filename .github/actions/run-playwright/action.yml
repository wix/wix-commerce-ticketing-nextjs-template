name: 'Store Playwright Results'
description: 'Store Playwright Results'
inputs:
  provider-deployment-url:
    description: 'The deployment URL to test with'
    required: true
  provider:
    description: 'Which next deployment provider is used'
    required: true
  githubToken:
    description: 'GitHub Token'
    required: true
  prId:
    description: 'Pull request ID (optional)'
    required: false
runs:
  using: "composite"
  steps:
    - name: Run E2E Tests on Netlify URL
      id: playwright-e2e
      run: REMOTE_PROVIDER=${{ inputs.provider }} yarn e2e
      shell: bash
      env:
        PLAYWRIGHT_TEST_BASE_URL: ${{ inputs.provider-deployment-url }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-${{ inputs.provider }}
        path: playwright-report/
        retention-days: 10
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: screenshots-${{inputs.provider}}
        path: tests/e2e/__screenshots__/${{inputs.provider}}
        retention-days: 10
    - uses: actions/github-script@v6
      if: always()
      with:
        github-token: ${{ inputs.githubToken }}
        script: |
          const conclusion = '${{ steps.playwright-e2e.outcome }}';
          const prId = '${{ inputs.prId }}';
          const provider = '${{ inputs.provider }}';
          console.log('Update status check should run: ',prId && conclusion, {prId, conclusion}); 
          console.log('Args:', {prId, conclusion}); 
          if (prId && conclusion) {
            const owner = '${{ github.repository_owner }}';
            const repo = '${{ github.repository }}';
            console.log('Update status check should run: ',prId && conclusion, {prId, conclusion});
            const pullRequest = github.rest.pulls.get({
              owner,
              repo,
              pull_id: prId,
            });
            console.log('PR: ', pullRequest);
              
            console.log('PR ID: ', pullRequest.id);
            const checkInput = {
              owner,
              repo,
              check_run_id: `job/${{ github.job }}`,
              pull_request_id: pullRequestId.id,
              status: 'completed',
              conclusion: conclusion,
              output: {
                title: 'e2e ${provider}',
                summary: `Playwright E2E executed with conclusion: ${conclusion}`,
              },
            };
            github.rest.checkRuns.update(checkInput);
          
            // Create a comment with the artifact links on the pull request
            const artifactLinks = [
              `E2E ${provider} results:`,
              `[Playwright Report](https://github.com/${owner}/${repo}/actions/runs/${checkInput.check_run_id}/artifacts/playwright-report-${inputs.provider})`,
              `[Screenshots](https://github.com/${owner}/${repo}/actions/runs/${checkInput.check_run_id}/artifacts/screenshots-${inputs.provider})`
            ];
            const comment = artifactLinks.join('\n');
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pullRequest.data.number,
              body: comment
            });
          }
